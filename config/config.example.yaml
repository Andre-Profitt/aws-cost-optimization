# AWS Cost Optimizer Configuration

aws:
  # List of regions to analyze (leave empty to analyze all regions)
  regions:
    - us-east-1
    - us-west-2
    # - eu-west-1
    # - ap-southeast-1
  
  # AWS profile to use (optional)
  profile: default
  
  # Cross-account role name (for multi-account setups)
  cross_account_role: OrganizationCostOptimizerRole

optimization:
  # EC2 optimization settings
  ec2:
    cpu_threshold: 10        # CPU % threshold for idle detection
    memory_threshold: 20     # Memory % threshold (if available)
    network_threshold: 5     # Network MB/day threshold
    observation_days: 14     # Days to look back for metrics
    
    # Instance types to exclude from analysis
    excluded_instance_types:
      - t2.nano
      - t2.micro
    
    # Rightsizing settings
    rightsizing:
      enabled: true
      cpu_p95_threshold: 60  # P95 CPU % for rightsizing
      minimum_savings: 50    # Minimum monthly savings to recommend
  
  # EBS optimization settings
  ebs:
    unattached_days: 30      # Days before flagging unattached volumes
    snapshot_age_days: 30    # Consider snapshots older than this
    
  # S3 optimization settings
  s3:
    # Storage class transitions (days)
    standard_to_ia_days: 30
    ia_to_glacier_days: 90
    glacier_to_deep_archive_days: 180
    
    # Minimum object size for storage class recommendations (MB)
    min_object_size_mb: 128
    
    # Lifecycle policy settings
    enable_lifecycle_recommendations: true
    
  # RDS optimization settings
  rds:
    cpu_threshold: 10
    connection_threshold: 5
    storage_threshold: 20    # % of allocated storage used

# Safety settings
safety:
  # Always run in dry-run mode first
  dry_run: true
  
  # Require manual approval for changes
  require_approval: true
  
  # Tags that mark resources as protected
  protected_tags:
    - DoNotOptimize
    - Production
    - Critical
  
  # Environments considered safe for automated changes
  safe_environments:
    - dev
    - development
    - test
    - testing
    - qa
    - staging
  
  # Minimum age (days) before optimizing a resource
  minimum_resource_age: 7

# Reporting settings
reporting:
  # Output format: json, csv, excel, html
  default_format: excel
  
  # Include detailed metrics in reports
  include_metrics: true
  
  # Email settings (optional)
  email:
    enabled: false
    smtp_host: smtp.gmail.com
    smtp_port: 587
    from_address: aws-optimizer@company.com
    to_addresses:
      - devops@company.com
      - finance@company.com

# Notification settings
notifications:
  # Slack webhook (optional)
  slack:
    enabled: false
    webhook_url: https://hooks.slack.com/services/YOUR/WEBHOOK/URL
    channel: "#aws-cost-optimization"
    
  # SNS topic (optional)
  sns:
    enabled: false
    topic_arn: arn:aws:sns:us-east-1:123456789012:cost-optimization

# Advanced settings
advanced:
  # Number of parallel workers
  parallel_workers: 10
  
  # API rate limiting (requests per second)
  rate_limit: 10
  
  # Cache settings
  cache:
    enabled: true
    ttl_hours: 24
    directory: ~/.aws-cost-optimizer/cache
  
  # Logging
  logging:
    level: INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    file: aws-cost-optimizer.log
    max_size_mb: 100
    backup_count: 5